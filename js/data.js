// –°–∏—Å—Ç–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã
class GameData {
    constructor() {
        this.userData = this.loadUserData();
    }
    
    // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getDefaultUserData() {
        return {
            userId: this.generateUserId(),
            level: 1,
            xp: 0,
            xpToNextLevel: 100,
            totalScore: 0,
            gamesPlayed: 0,
            gamesWon: 0,
            bestTime: null,
            abilities: {
                scanner: { level: 1, uses: 1 },
                shield: { level: 1, uses: 1 },
                hint: { level: 1, uses: 3 }
            },
            unlockedAbilities: ['scanner', 'shield', 'hint'],
            achievements: [],
            settings: {
                sound: true,
                vibrations: true
            }
        };
    }
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    generateUserId() {
        return 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUserData() {
        // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        const savedData = localStorage.getItem('minesweeper_user_data');
        if (savedData) {
            return JSON.parse(savedData);
        }
        return this.getDefaultUserData();
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    saveUserData() {
        localStorage.setItem('minesweeper_user_data', JSON.stringify(this.userData));
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserData() {
        return this.userData;
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserData(newData) {
        this.userData = { ...this.userData, ...newData };
        this.saveUserData();
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ XP
    addXP(xp) {
        this.userData.xp += xp;
        this.checkLevelUp();
        this.saveUserData();
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
    checkLevelUp() {
        if (this.userData.xp >= this.userData.xpToNextLevel) {
            this.userData.level++;
            this.userData.xp -= this.userData.xpToNextLevel;
            this.userData.xpToNextLevel = Math.floor(this.userData.xpToNextLevel * 1.5);
            this.unlockNewAbilities();
            return true;
        }
        return false;
    }
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
    unlockNewAbilities() {
        const newAbilities = {
            5: 'telepathy',    // –¢–µ–ª–µ–ø–∞—Ç–∏—è
            10: 'timeShield',  // –í—Ä–µ–º–µ–Ω–Ω–æ–π —â–∏—Ç
            15: 'magnetism'    // –ú–∞–≥–Ω–µ—Ç–∏–∑–º
        };
        
        if (newAbilities[this.userData.level]) {
            const ability = newAbilities[this.userData.level];
            if (!this.userData.unlockedAbilities.includes(ability)) {
                this.userData.unlockedAbilities.push(ability);
                this.userData.abilities[ability] = { level: 1, uses: 1 };
            }
        }
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö –ø–æ —É—Ä–æ–≤–Ω—é
    getAbilityInfo(abilityKey, userLevel) {
        const abilities = {
            scanner: {
                name: "–°–∫–∞–Ω–µ—Ä",
                icon: "üîç",
                description: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–ª–∏–∂–∞–π—à–∏–µ –º–∏–Ω—ã",
                cost: 50,
                baseUses: 1,
                levelUp: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"
            },
            shield: {
                name: "–©–∏—Ç",
                icon: "üõ°Ô∏è",
                description: "–ó–∞—â–∏—Ç–∞ –æ—Ç –≤–∑—Ä—ã–≤–∞",
                cost: 100,
                baseUses: 1,
                levelUp: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π"
            },
            hint: {
                name: "–ü–æ–¥—Å–∫–∞–∑–∫–∞",
                icon: "üí°",
                description: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∫–ª–µ—Ç–∫—É",
                cost: 30,
                baseUses: 3,
                levelUp: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Å–∫–∞–∑–æ–∫"
            },
            telepathy: {
                name: "–¢–µ–ª–µ–ø–∞—Ç–∏—è",
                icon: "üß†",
                description: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –º–∏–Ω—ã –Ω–∞ 5 —Å–µ–∫—É–Ω–¥",
                cost: 200,
                baseUses: 1,
                levelUp: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞"
            },
            timeShield: {
                name: "–í—Ä–µ–º–µ–Ω–Ω–æ–π —â–∏—Ç",
                icon: "‚è≥",
                description: "–ó–∞–º–µ–¥–ª—è–µ—Ç –≤—Ä–µ–º—è –Ω–∞ 10 —Å–µ–∫—É–Ω–¥",
                cost: 150,
                baseUses: 2,
                levelUp: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –∑–∞–º–µ–¥–ª–µ–Ω–∏—è"
            },
            magnetism: {
                name: "–ú–∞–≥–Ω–µ—Ç–∏–∑–º",
                icon: "üß≤",
                description: "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç 3 –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏",
                cost: 180,
                baseUses: 1,
                levelUp: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º—ã—Ö –∫–ª–µ—Ç–æ–∫"
            }
        };
        
        return abilities[abilityKey] || null;
    }
}
